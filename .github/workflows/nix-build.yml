name: Nix Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        compiler : [ghc96]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Enable cachix
      uses: cachix/cachix-action@v16
      with:
        name: neil-mayhew
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Build
      id: build
      run: |
        type=${{ matrix.os == 'macos-latest' && 'dynamic' || 'static' }}
        nix build --accept-flake-config .#$type.${{ matrix.compiler }}

    - name: Push to cachix
      run: |
        nix-store -qR --include-outputs $(nix-store -qd result) |
          grep -v '\.drv$' |
          cachix push neil-mayhew

    - name: Record results
      id: results
      run: |
        echo "derivation=$(nix derivation show ./result | jq -r .[].env.pname)" >>"$GITHUB_OUTPUT"
        echo "binaries=$(find -L result/bin -type f)" >>"$GITHUB_OUTPUT"
        echo "system=$(uname -s)" >>"$GITHUB_OUTPUT"
        echo "machine=$(uname -m)" >>"$GITHUB_OUTPUT"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.results.outputs.derivation }}-${{ steps.results.outputs.system }}-${{ steps.results.outputs.machine }}
        path: ${{ steps.results.outputs.binaries }}
