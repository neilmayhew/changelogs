name: Nix Build

on:
  pull_request:
  push:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        ghc : [ghc967]
      fail-fast: false

    runs-on: ${{ matrix.os }}

    steps:

    - name: Checkout
      uses: actions/checkout@v4

    - name: Install nix
      uses: cachix/install-nix-action@v31
      with:
        nix_path: nixpkgs=channel:nixos-unstable

    - name: Enable cachix
      uses: cachix/cachix-action@v16
      with:
        name: neil-mayhew
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Build
      id: build
      run: |
        TARGET=${{ matrix.os == 'macos-latest' && 'dynamic' || 'static' }}.${{ matrix.ghc }}
        RESULT=$(nix build .#$TARGET --accept-flake-config --no-link --print-out-paths)
        echo "result=$RESULT" >>"$GITHUB_OUTPUT"
        echo "binaries=$(find "$RESULT/bin" -type f)" >>"$GITHUB_OUTPUT"

    - name: Push to cachix
      run: |
        nix-store -qR --include-outputs $(nix-store -qd ${{ steps.build.outputs.result }}) \
          | grep -v '\.drv$' \
          | cachix push neil-mayhew

    - name: Record system details
      id: system-details
      run: |
        echo "system=$(uname -s)" >>"$GITHUB_OUTPUT"
        echo "machine=$(uname -m)" >>"$GITHUB_OUTPUT"

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: changelogs-${{ steps.system-details.outputs.system }}-${{ steps.system-details.outputs.machine }}
        path: ${{ steps.build.outputs.binaries }}
